import random


def ask_question(question, options, correct_answer):
    print("\n" + question)
    for i, option in enumerate(options, 1):
        print(f"{i}. {option}")

    while True:
        try:
            user_answer = int(input("Enter the number of your choice: "))
            if 1 <= user_answer <= len(options):
                break
            else:
                print("Please choose a valid option.")
        except ValueError:
            print("Invalid input. Please enter a number.")

    return options[user_answer - 1] == correct_answer


def run_quiz(questions):
    random.shuffle(questions)
    selected_questions = questions[:10]
    score = 0

    for q in selected_questions:
        question, options, correct_answer = q
        if ask_question(question, options, correct_answer):
            print("Correct!\n")
            score += 1
        else:
            print(f"Wrong. The correct answer was: {correct_answer}\n")

    print(f"Your final score: {score}/{len(selected_questions)}")


if __name__ == "__main__":
    questions = [
        ("In first-order predicate logic, a clause is:",
         ["A conjunction of literals", "A disjunction of literals", "A formula with at least one negated literal",
          "A formula with at most one negated literal"],
         "A disjunction of literals"),
        ("When do we say that two literals are complementary?",
         ["if one literal has one variable less than the other", "if one literal is the negation of the other",
          "if a literal has one variable more than the other", "none of these responses"],
         "if one literal is the negation of the other"),
        ("Reinforcement learning is the problem faced by an agent who:",
         ["Learn behaviour by calculating utility function values in a static environment",
          "Learn behaviour by calculating utility function values in a dynamic environment",
          "Learns behaviour through trial and error interactions with a static environment",
          "Learns behaviour through trial and error interactions with a dynamic environment"],
         "Learns behaviour through trial and error interactions with a dynamic environment"),
        ("The heuristic function h(n) is:",
         ["The lowest path cost", "The cheapest path from the root to the goal node",
          "The estimated cost of the cheapest path from the root to the goal node", "The cost of the middle way"],
         "The estimated cost of the cheapest path from the root to the goal node"),
        ("Feedforward neural networks are neural networks where:",
         ["The output of a layer is used as the input of the next layer",
          "The input of a layer is used as the output of the next layer",
          "The input of a layer is used as the input of the next layer",
          "The output of a layer is used as the output of the next layer"],
         "The output of a layer is used as the input of the next layer"),
        ("In propositional logic, a tautology is:",
         ["A true formula in at least one interpretation",
          "A true formula in all interpretations",
          "A false formula in all interpretations",
          "A false formula in at least one interpretation"],
         "A true formula in all interpretations"),
        ("What is the difference between the Alpha-Beta algorithm and the Mini-Max algorithm?",
         ["Alpha-Beta tests a number of nodes smaller than or equal to the number of nodes in Mini-Max",
          "Alpha-Beta tests a number of nodes greater than or equal to the number of nodes in Mini-Max",
          "Alpha-Beta is slower than Mini-Max",
          "None of the above"],
         "Alpha-Beta tests a number of nodes smaller than or equal to the number of nodes in Mini-Max"),
        ("Depth-first search is:",
         ["A non-informed and complete strategy",
          "A non-informed and incomplete strategy",
          "An informed and complete strategy",
          "An informed and incomplete strategy"],
         "A non-informed and incomplete strategy"),
        ("In a rule-based system, all conflicts refer to:",
         ["User interaction to resolve a specific instance",
          "The set of rules in the knowledge base, expressed in the system-specific language for the representation of knowledge",
          "The deduction of new data, based on data in the work memory",
          "The subset of rules in the knowledge base that have the conditions met by the data in the work memory"],
         "The subset of rules in the knowledge base that have the conditions met by the data in the work memory"),
        ("Breadth-first search is:",
         ["A non-informed and complete strategy",
          "An non-informed and incomplete strategy",
          "An informed and complete strategy",
          "An informed and incomplete strategy"],
         "A non-informed and complete strategy"),
        ("In the learning algorithm in the version space, a concept is learned when:",
         ["The most general hypothesis is more specific than some different hypotheses",
          "The most general hypothesis and the most specific hypothesis are identical",
          "The most specific hypothesis is a subset of the most general hypothesis",
          "The most general hypothesis is a subset of the most specific hypothesis"],
         "The most general hypothesis and the most specific hypothesis are identical"),
        ("Algorithm A* is eligible if:",
         ["It is not guaranteed to return an optimal solution, when one exists",
          "It is guaranteed to return an optimal solution, when one exists",
          "It returns solutions, but not necessarily an optimal solution",
          "It is guaranteed to return several optimal solutions"],
         "It is guaranteed to return an optimal solution, when one exists"),
        ("In a neural network, the training algorithm aims to:",
         ["Maximise the cost C(w,b) according to weights and biases",
          "Minimise the cost C(w,b) according to weights and biases",
          "Keep the cost C(w,b) constant according to weights and biases",
          "None of these answers"],
         "Minimise the cost C(w,b) according to weights and biases"),
        ("The A* algorithm finds the optimal cost solution if the h function:",
         ["Is always an underestimation of the actual cost of the path from the current state to the final state",
          "Is always an overestimation of the real cost of the path from the current state to the final state",
          "Is an approximation of the function g",
          "is a predefined formula, regardless of the problem to be solved"],
         "Is always an underestimation of the actual cost of the path from the current state to the final state"),
        (
        "Which algorithm is similar to the MiniMax algorithm, but eliminates branches that cannot influence the final decision?",
        ["The in-depth search algorithm",
         "The width search algorithm",
         "Algorithm A*",
         "The alpha-beta pruning algorithm"],
        "The alpha-beta pruning algorithm"),
        ("In which of the following types of learning, the algorithm returns a reward or punishment to the learner?",
         ["Active learning", "Learning by reinforcement", "Supervised learning", "Unsupervised apprenticeship"],
         "Learning by reinforcement"),
        ("An algorithm is complete if:",
         ["It ends with a solution when it exists",
          "It starts with a solution",
          "It doesn’t end with a solution",
          "It has a decision parameter"],
         "It ends with a solution when it exists"),
        ("What form is called a disjunction of literals?",
         ["Disjunctive normal form",
          "Conjunctive normal form",
          "Reduced normal form",
          "Normal form"],
         "Conjunctive normal form"),
        (
        "Best-first research is a type of knowledgable search, which uses ______ to choose the best node for expansion",
        ["The evaluation function that returns the lowest evaluation",
         "The evaluation function that returns the highest evaluation",
         "The evaluation function that returns the average evaluation",
         "None of these answers"],
        "The evaluation function that returns the lowest evaluation"),
        ("What is the transposition rule?",
         ["P → Q, deduct ~Q → P",
          "P → Q, deduct Q → ~P",
          "P → Q, deduct Q → P",
          "P → Q, deduct ~Q → ~P"],
         "P → Q, deduct ~Q → ~P"),
        ("The main components of a rules-based system are:",
         ["The knowledge base, the working memory, the inference engine",
          "The database, the working memory, the inference engine",
          "The knowledge base, temporary memory, the inference engine",
          "The database, temporary memory, inference engine"],
         "The knowledge base, the working memory, the inference engine"),
        ("A game can be formally defined as a kind of search problem with the following components:",
         ["The initial state, the successor function, and the terminality test",
          "The initial state, the successor function, and the utility function",
          "The initial state, the terminality test, and the utility function",
          "The initial state, the successor function, the terminality test, and the utility function"],
         "The initial state, the successor function, the terminality test, and the utility function"),
        ("The set of actions for a problem in a state space is represented by:",
         ["Intermediate states", "The initial state",
          "Successor function, which takes the current action and returns the following state", "The final state"],
         "Successor function, which takes the current action and returns the following state"),
        ("The formula is: A ∧ (B → A)) → A",
         ["Contradiction", "Not a well-formed formula", "Tautology", "Realisable"],
         "Tautology"),
        ("The formula is: ~A ∧ ~ (A → B)",
         ["Contradiction", "Not a well-formed formula", "Tautology", "Realisable"],
         "Realisable"),
        ("Algorithm A* is based on:",
         ["The in-depth search algorithm",
          "The width search algorithm",
          "The best-first search algorithm",
          "None of these answers"],
         "The best-first search algorithm"),
        (
        "In an AND/OR tree, an OR node, called A, is the parent of an AND node, called B. If one of the children of node B is a state that has no solution, what can we say about node A:",
        ["We are sure that there is no solution",
         "We are sure that there is a solution",
         "It is possible to have a solution",
         "It becomes an AND node"],
        "It is possible to have a solution"),
        ("Which statement best characterises an informed search strategy?",
         ["An informed search strategy uses a predefined order to investigate the states",
          "An informed search strategy systematically inspects all states in the search space, until the final state is found",
          "An informed search strategy systematically inspects all states in the search space, until a contradiction is found",
          "An informed search strategy uses information on a specific problem, to guide the search"],
         "An informed search strategy uses information on a specific problem, to guide the search"),
        ("In the ID3 algorithm, what does it take as input an object described by a set of attributes?",
         ["A tree", "A graph", "A decision graph", "A decision tree"],
         "A decision tree"),
        ("In the A* algorithm, the evaluation function is:",
         ["The heuristic function",
          "Cost of the path from the starting node to the current node + heuristic cost",
          "Cost of the path from the starting node to the current node",
          "The average cost of the path from the starting node to the current node and the heuristic cost"],
         "Cost of the path from the starting node to the current node + heuristic cost"),
        ("In a rule-based system, meta-rules are:",
         ["Rules to describe modalities and criteria for choosing rules from the database",
          "Rules for describing modalities and criteria for choosing inference engine rules",
          "Rules to describe modalities and criteria for choosing rules for all conflicts",
          "Rules for describing modalities and criteria for choosing knowledge base rules"],
         "Rules to describe modalities and criteria for choosing rules from the database"),
        ("Formula F is a logical consequence of formula P if:",
         ["F has the true value in some interpretations in which P has the false value",
          "F has the true value in all interpretations in which P has the true value",
          "F has the false value in some interpretations in which P has the true value",
          "F has the false value in all interpretations in which P has the true value"],
         "F has the true value in all interpretations in which P has the true value"),
        ("The Modus Ponens inference rule is a:",
         ["Recursive inference rule",
          "Semantic inference rule",
          "Inductive inference rule",
          "Deductive inference rule"],
         "Deductive inference rule"),
        ("In an informed search strategy:",
         ["The consideration of the next state to be inspected is done using heuristic criteria",
          "The consideration of the next state to be inspected is done in an arbitrary order, previously established",
          "The consideration of the next state to be inspected is done using non-deterministic criteria",
          "The consideration of the next state to be inspected is done using incomplete criteria"],
         "The consideration of the next state to be inspected is done using heuristic criteria"),
        ("The hill climbing strategy is:",
         ["Irrevocable and incomplete",
          "Tentative and complete",
          "Irrevocable and complete",
          "Tentative and incomplete"],
         "Irrevocable and incomplete"),
        ("In the search process, the heuristic information has an important role, because:",
         ["It keeps constant the number of investigated states for obtaining a solution",
          "It duplicates the number of investigated states for obtaining a solution",
          "It decreases the number of investigated states for obtaining a solution",
          "It increases the number of investigated states for obtaining a solution"],
         "It decreases the number of investigated states for obtaining a solution"),
        ("In the best-first strategy, the node selected to be expanded is the node with:",
         ["The maximum value of the heuristic function",
          "The average value of the heuristic function",
          "The minimum value of the heuristic function",
          "None of the three answers"],
         "The minimum value of the heuristic function"),
        ("In an uninformed search strategy:",
         ["The consideration of the next state to be inspected is done in an arbitrary order, previously established",
          "The consideration of the next state to be inspected is done using incomplete criteria",
          "The consideration of the next state to be inspected is done using non-deterministic criteria",
          "The consideration of the next state to be inspected is done using heuristic criteria"],
         "The consideration of the next state to be inspected is done in an arbitrary order, previously established"),
        ("The two types of induction used in artificial intelligence are:",
         ["Deterministic induction and non-deterministic induction",
          "Optimal induction and non-optimal induction",
          "Complete induction and incomplete induction",
          "Admissible induction and non-admissible induction"],
         "Complete induction and incomplete induction"),
        ("The non-deductive inference rules:",
         ["Are true in most of the cases",
          "Are always true",
          "Are true in very few cases",
          "Are always false"],
         "Are true in most of the cases"),
        ("What is the difference between the breadth-first strategy and the depth-first strategy?",
         ["Both the breadth-first strategy and the depth-first strategy are complete",
          "The breadth-first strategy is incomplete, while the depth-first strategy is complete",
          "The breadth-first strategy is complete, while the depth-first strategy is incomplete",
          "Both the breadth-first strategy and the depth-first strategy are incomplete"],
         "The breadth-first strategy is complete, while the depth-first strategy is incomplete"),
        ("A playing cards game is:",
         ["A non-deterministic and complete information game",
          "A deterministic and complete information game",
          "A non-deterministic and partial information game",
          "A deterministic and partial information game"],
         "A non-deterministic and partial information game"),
        ("There are two A* algorithms, and . If is more informed than A1 A2 A1 , then:",
         ["will always expand more states than A1 A2",
          "None of the three answers is correct",
          "will never expand more states than A1 A2",
          "will sometimes expand more states than A1 A2"],
         "will never expand more states than A1 A2"),]

    run_quiz(questions)
